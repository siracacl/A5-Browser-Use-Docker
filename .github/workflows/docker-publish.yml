name: Build and Publish Docker Image

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: a5-browser-use-docker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "release" ]]; then
          # Use the release tag for releases
          VERSION=${{ github.event.release.tag_name }}
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
        else
          # Generate version based on commit count and short SHA
          COMMIT_COUNT=$(git rev-list --count HEAD)
          SHORT_SHA=$(git rev-parse --short HEAD)
          VERSION="0.1.${COMMIT_COUNT}-${SHORT_SHA}"
        fi
        
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Generated version: ${VERSION}"

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=v${{ steps.version.outputs.version }}
          type=raw,value=latest,enable={{is_default_branch}}
          type=ref,event=pr
        labels: |
          org.opencontainers.image.title=${{ env.IMAGE_NAME }}
          org.opencontainers.image.description=A5 Browser Use Docker - AI Agent API with BrowserUse
          org.opencontainers.image.version=v${{ steps.version.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output image details
      run: |
        echo "Image published successfully!"
        echo "Registry: ${{ env.REGISTRY }}"
        echo "Image: ${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
        echo "Version: v${{ steps.version.outputs.version }}"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
